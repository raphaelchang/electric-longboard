#ifndef UTIL_H_
#define UTIL_H_

#define pole_pairs 7
#define factor 1000

class Util
{
  public:
  static int Wrap(int angle)
  {
    if (angle < 0)
    {
      angle += 360 * factor;
      return angle;
    }
    while (angle > 360 * factor)
      angle -= 360 * factor;
    return angle;
  }
  
  static int Scale(int angle)
  {
    angle %= (360 * factor) / pole_pairs;
    return angle * pole_pairs;
  }

  static int Sin(int x)
  {
    static int sintable[360] = {0 ,
    17  ,
    35  ,
    52  ,
    70  ,
    87  ,
    105 ,
    122 ,
    139 ,
    156 ,
    174 ,
    191 ,
    208 ,
    225 ,
    242 ,
    259 ,
    276 ,
    292 ,
    309 ,
    326 ,
    342 ,
    358 ,
    375 ,
    391 ,
    407 ,
    423 ,
    438 ,
    454 ,
    469 ,
    485 ,
    500 ,
    515 ,
    530 ,
    545 ,
    559 ,
    574 ,
    588 ,
    602 ,
    616 ,
    629 ,
    643 ,
    656 ,
    669 ,
    682 ,
    695 ,
    707 ,
    719 ,
    731 ,
    743 ,
    755 ,
    766 ,
    777 ,
    788 ,
    799 ,
    809 ,
    819 ,
    829 ,
    839 ,
    848 ,
    857 ,
    866 ,
    875 ,
    883 ,
    891 ,
    899 ,
    906 ,
    914 ,
    921 ,
    927 ,
    934 ,
    940 ,
    946 ,
    951 ,
    956 ,
    961 ,
    966 ,
    970 ,
    974 ,
    978 ,
    982 ,
    985 ,
    988 ,
    990 ,
    993 ,
    995 ,
    996 ,
    998 ,
    999 ,
    999 ,
    1000  ,
    1000  ,
    1000  ,
    999 ,
    999 ,
    998 ,
    996 ,
    995 ,
    993 ,
    990 ,
    988 ,
    985 ,
    982 ,
    978 ,
    974 ,
    970 ,
    966 ,
    961 ,
    956 ,
    951 ,
    946 ,
    940 ,
    934 ,
    927 ,
    921 ,
    914 ,
    906 ,
    899 ,
    891 ,
    883 ,
    875 ,
    866 ,
    857 ,
    848 ,
    839 ,
    829 ,
    819 ,
    809 ,
    799 ,
    788 ,
    777 ,
    766 ,
    755 ,
    743 ,
    731 ,
    719 ,
    707 ,
    695 ,
    682 ,
    669 ,
    656 ,
    643 ,
    629 ,
    616 ,
    602 ,
    588 ,
    574 ,
    559 ,
    545 ,
    530 ,
    515 ,
    500 ,
    485 ,
    469 ,
    454 ,
    438 ,
    423 ,
    407 ,
    391 ,
    375 ,
    358 ,
    342 ,
    326 ,
    309 ,
    292 ,
    276 ,
    259 ,
    242 ,
    225 ,
    208 ,
    191 ,
    174 ,
    156 ,
    139 ,
    122 ,
    105 ,
    87  ,
    70  ,
    52  ,
    35  ,
    17  ,
    0 ,
    -17 ,
    -35 ,
    -52 ,
    -70 ,
    -87 ,
    -105  ,
    -122  ,
    -139  ,
    -156  ,
    -174  ,
    -191  ,
    -208  ,
    -225  ,
    -242  ,
    -259  ,
    -276  ,
    -292  ,
    -309  ,
    -326  ,
    -342  ,
    -358  ,
    -375  ,
    -391  ,
    -407  ,
    -423  ,
    -438  ,
    -454  ,
    -469  ,
    -485  ,
    -500  ,
    -515  ,
    -530  ,
    -545  ,
    -559  ,
    -574  ,
    -588  ,
    -602  ,
    -616  ,
    -629  ,
    -643  ,
    -656  ,
    -669  ,
    -682  ,
    -695  ,
    -707  ,
    -719  ,
    -731  ,
    -743  ,
    -755  ,
    -766  ,
    -777  ,
    -788  ,
    -799  ,
    -809  ,
    -819  ,
    -829  ,
    -839  ,
    -848  ,
    -857  ,
    -866  ,
    -875  ,
    -883  ,
    -891  ,
    -899  ,
    -906  ,
    -914  ,
    -921  ,
    -927  ,
    -934  ,
    -940  ,
    -946  ,
    -951  ,
    -956  ,
    -961  ,
    -966  ,
    -970  ,
    -974  ,
    -978  ,
    -982  ,
    -985  ,
    -988  ,
    -990  ,
    -993  ,
    -995  ,
    -996  ,
    -998  ,
    -999  ,
    -999  ,
    -1000 ,
    -1000 ,
    -1000 ,
    -999  ,
    -999  ,
    -998  ,
    -996  ,
    -995  ,
    -993  ,
    -990  ,
    -988  ,
    -985  ,
    -982  ,
    -978  ,
    -974  ,
    -970  ,
    -966  ,
    -961  ,
    -956  ,
    -951  ,
    -946  ,
    -940  ,
    -934  ,
    -927  ,
    -921  ,
    -914  ,
    -906  ,
    -899  ,
    -891  ,
    -883  ,
    -875  ,
    -866  ,
    -857  ,
    -848  ,
    -839  ,
    -829  ,
    -819  ,
    -809  ,
    -799  ,
    -788  ,
    -777  ,
    -766  ,
    -755  ,
    -743  ,
    -731  ,
    -719  ,
    -707  ,
    -695  ,
    -682  ,
    -669  ,
    -656  ,
    -643  ,
    -629  ,
    -616  ,
    -602  ,
    -588  ,
    -574  ,
    -559  ,
    -545  ,
    -530  ,
    -515  ,
    -500  ,
    -485  ,
    -469  ,
    -454  ,
    -438  ,
    -423  ,
    -407  ,
    -391  ,
    -375  ,
    -358  ,
    -342  ,
    -326  ,
    -309  ,
    -292  ,
    -276  ,
    -259  ,
    -242  ,
    -225  ,
    -208  ,
    -191  ,
    -174  ,
    -156  ,
    -139  ,
    -122  ,
    -105  ,
    -87 ,
    -70 ,
    -52 ,
    -35 ,
    -17 };
    return sintable[x];
  }
  
  static int Trap(int x)
  {
    static int traptable[360] = {0  ,
    8 ,
    17  ,
    25  ,
    33  ,
    42  ,
    50  ,
    58  ,
    67  ,
    75  ,
    83  ,
    92  ,
    100 ,
    108 ,
    117 ,
    125 ,
    133 ,
    142 ,
    150 ,
    158 ,
    167 ,
    175 ,
    183 ,
    192 ,
    200 ,
    208 ,
    217 ,
    225 ,
    233 ,
    242 ,
    250 ,
    258 ,
    267 ,
    275 ,
    283 ,
    292 ,
    300 ,
    308 ,
    317 ,
    325 ,
    333 ,
    342 ,
    350 ,
    358 ,
    367 ,
    375 ,
    383 ,
    392 ,
    400 ,
    408 ,
    417 ,
    425 ,
    433 ,
    442 ,
    450 ,
    458 ,
    467 ,
    475 ,
    483 ,
    492 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    500 ,
    492 ,
    483 ,
    475 ,
    467 ,
    458 ,
    450 ,
    442 ,
    433 ,
    425 ,
    417 ,
    408 ,
    400 ,
    392 ,
    383 ,
    375 ,
    367 ,
    358 ,
    350 ,
    342 ,
    333 ,
    325 ,
    317 ,
    308 ,
    300 ,
    292 ,
    283 ,
    275 ,
    267 ,
    258 ,
    250 ,
    242 ,
    233 ,
    225 ,
    217 ,
    208 ,
    200 ,
    192 ,
    183 ,
    175 ,
    167 ,
    158 ,
    150 ,
    142 ,
    133 ,
    125 ,
    117 ,
    108 ,
    100 ,
    92  ,
    83  ,
    75  ,
    67  ,
    58  ,
    50  ,
    42  ,
    33  ,
    25  ,
    17  ,
    8 ,
    0 ,
    -8  ,
    -17 ,
    -25 ,
    -33 ,
    -42 ,
    -50 ,
    -58 ,
    -67 ,
    -75 ,
    -83 ,
    -92 ,
    -100  ,
    -108  ,
    -117  ,
    -125  ,
    -133  ,
    -142  ,
    -150  ,
    -158  ,
    -167  ,
    -175  ,
    -183  ,
    -192  ,
    -200  ,
    -208  ,
    -217  ,
    -225  ,
    -233  ,
    -242  ,
    -250  ,
    -258  ,
    -267  ,
    -275  ,
    -283  ,
    -292  ,
    -300  ,
    -308  ,
    -317  ,
    -325  ,
    -333  ,
    -342  ,
    -350  ,
    -358  ,
    -367  ,
    -375  ,
    -383  ,
    -392  ,
    -400  ,
    -408  ,
    -417  ,
    -425  ,
    -433  ,
    -442  ,
    -450  ,
    -458  ,
    -467  ,
    -475  ,
    -483  ,
    -492  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -500  ,
    -492  ,
    -483  ,
    -475  ,
    -467  ,
    -458  ,
    -450  ,
    -442  ,
    -433  ,
    -425  ,
    -417  ,
    -408  ,
    -400  ,
    -392  ,
    -383  ,
    -375  ,
    -367  ,
    -358  ,
    -350  ,
    -342  ,
    -333  ,
    -325  ,
    -317  ,
    -308  ,
    -300  ,
    -292  ,
    -283  ,
    -275  ,
    -267  ,
    -258  ,
    -250  ,
    -242  ,
    -233  ,
    -225  ,
    -217  ,
    -208  ,
    -200  ,
    -192  ,
    -183  ,
    -175  ,
    -167  ,
    -158  ,
    -150  ,
    -142  ,
    -133  ,
    -125  ,
    -117  ,
    -108  ,
    -100  ,
    -92 ,
    -83 ,
    -75 ,
    -67 ,
    -58 ,
    -50 ,
    -42 ,
    -33 ,
    -25 ,
    -17 ,
    -8   };
    return traptable[x];
  }
};

#endif
